{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Bruno Megharba/OneDrive/Documents/GSBAPP/GSBFront-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Bruno Megharba/OneDrive/Documents/GSBAPP/GSBFront-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import jsonwebtoken from'jsonwebtoken';export var postUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){var response,_yield$response$json,token,decoded;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://localhost:3001/users/auth',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(user)});case 2:response=_context.sent;_context.next=5;return response.json();case 5:_yield$response$json=_context.sent;token=_yield$response$json.token;console.log(token);decoded=jsonwebtoken.verify(token,'ppe');return _context.abrupt(\"return\",{decoded:decoded,token:token});case 10:case\"end\":return _context.stop();}}},_callee);}));return function postUsers(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/Bruno Megharba/OneDrive/Documents/GSBAPP/GSBFront-main/src/api/users.js"],"names":["jsonwebtoken","postUsers","user","fetch","method","headers","body","JSON","stringify","response","json","token","console","log","decoded","verify"],"mappings":"yWAAA,MAAOA,CAAAA,YAAP,KAAyB,cAAzB,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,IAAP,wLACAC,CAAAA,KAAK,CAAC,mCAAD,CAAsC,CAC5DC,MAAM,CAAE,MADoD,CAE5DC,OAAO,CAAE,CACL,SAAW,kBADN,CAEL,eAAiB,kBAFZ,CAFmD,CAMhEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAN0D,CAAtC,CADL,QACjBO,QADiB,qCASDA,CAAAA,QAAQ,CAACC,IAAT,EATC,2CAShBC,KATgB,sBAShBA,KATgB,CAUrBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACIG,OAXiB,CAWPd,YAAY,CAACe,MAAb,CAAoBJ,KAApB,CAA2B,KAA3B,CAXO,iCAYd,CAACG,OAAO,CAAPA,OAAD,CAAWH,KAAK,CAALA,KAAX,CAZc,yDAAH,kBAATV,CAAAA,SAAS,4CAAf","sourcesContent":["import jsonwebtoken from 'jsonwebtoken'\n\nexport const postUsers = async (user) => {\n    let response = await fetch('https://localhost:3001/users/auth', {\n        method: 'POST',\n        headers: {\n            'Accept' : 'application/json',\n            'Content-Type' : 'application/json'\n    }, \n    body: JSON.stringify(user)\n    })\n    let {token} = await response.json()\n    console.log(token)\n    let decoded = jsonwebtoken.verify(token, 'ppe')\n    return {decoded , token }\n}\n\n"]},"metadata":{},"sourceType":"module"}